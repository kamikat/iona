{"version":3,"sources":["lib/provider.jsx","lib/ui/App.jsx","lib/ui/index.js","lib/Iona.jsx","lib/PageLoader.jsx","lib/RefLinkLoader.jsx","lib/index.js","App.jsx","serviceWorker.js","index.js"],"names":["IonaNodeContext","React","createContext","useEntries","useContext","createComponent","type","Object","assign","name","children","_props","id","useMemo","slugify","remove","nanoid","entries","dispatch0","lastProps","useRef","props","current","deepEqual","selfIndex","useEffect","index","lastChildIndex","dispatch","useCallback","action","entry","childIndex","Provider","value","displayName","toUpperCase","slice","Category","Group","Topic","Page","ExternalLink","IonaProvider","useReducer","filter","t","BaseUrlContext","useBaseUrl","GroupList","map","topics","group","pages","topic","className","key","TopicList","PageList","baseUrl","sort","a","b","url","loading","disabled","to","getPageUrl","href","target","rel","MDXComponents","table","ContentView","defaultPage","default","Component","component","page","path","exact","components","category","join","IonaApp","version","useLocation","pathname","locationKey","useState","keyword","setSearchKeyword","keywordMatch","exec","keywordRegexStr","keywordRegex","RegExp","categories","urlCategoryId","find","startsWith","defaultCategoryId","categoryId","setCategoryId","entries1","title","keywords","test","groups","contentView","scrollTops","undefined","scrollTop","active","onClick","onChange","e","onKeyUp","blur","xmlns","viewBox","fill","d","ref","onScroll","App","Iona","description","DefaultApp","PageLoader","sourceId","sourcePath","promise","module","setModule","sourceFileName","aborted","then","frontMatter","refId","tableOfContents","RefLinkLoader","useMDXComponents","Link","item","process","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.457f97ee.chunk.js","sourcesContent":["import React, { useCallback, useContext, useEffect, useMemo, useReducer, useRef } from 'react';\nimport slugify from 'slugify';\nimport deepEqual from 'fast-deep-equal';\nimport { nanoid } from 'nanoid';\n\nconst IonaNodeContext = React.createContext(null);\n\nconst IonaProvider = ({ children }) => {\n\n  const [entries, dispatch] = useReducer((entries, [action, entry]) => {\n    switch (action) {\n      case 'ADD': {\n        return [ ...entries, entry ];\n      }\n      case 'DELETE': {\n        return entries.filter((t) => t.id !== entry.id);\n      }\n      default: {\n        return entries;\n      }\n    }\n  }, []);\n\n  return (\n    <IonaNodeContext.Provider value={[entries, dispatch]}>\n      {children}\n    </IonaNodeContext.Provider>\n  );\n};\n\nconst useEntries = () => useContext(IonaNodeContext);\n\nconst createComponent = (type) => {\n\n  const Component = ({ name='', children, ..._props }) => {\n\n    const id = useMemo(() => {\n      return slugify(name, { remove: /[*+~.()'\"!:@/]/g }) || `${type}:${nanoid()}`;\n    }, [name]);\n\n    const [entries, dispatch0] = useEntries();\n\n    const lastProps = useRef();\n    const props = lastProps.current = deepEqual(_props, lastProps.current) ? lastProps.current : _props;\n\n    const selfIndex = useRef(null);\n\n    useEffect(() => {\n      if (selfIndex.current === null) {\n        // request a new index from parent node\n        selfIndex.current = dispatch0(['ADD', { type, id, name, ...props }]);\n      } else {\n        // keep index for subsequent updates\n        dispatch0(['ADD', { type, id, name, index: selfIndex.current, ...props }]);\n      }\n      return () => {\n        dispatch0(['DELETE', { type, id, name, ...props }]);\n      };\n    }, [dispatch0, id, name, props]);\n\n    const lastChildIndex = useRef(0);\n\n    const dispatch = useCallback(([action, entry]) => {\n      const childIndex = lastChildIndex.current++;\n      dispatch0([action, { [type]: { id, name }, index: childIndex, ...entry }]);\n      return childIndex;\n    }, [dispatch0, id, name]);\n\n    return children ? (\n      <IonaNodeContext.Provider value={[entries, dispatch]}>\n        {children}\n      </IonaNodeContext.Provider>\n    ) : null;\n  };\n\n  return Object.assign(Component, {\n    displayName: `Iona.Node(${type[0].toUpperCase() + type.slice(1)})`\n  });\n};\n\nconst Category = createComponent('category');\n\nconst Group = createComponent('group');\n\nconst Topic = createComponent('topic');\n\nconst Page = createComponent('page');\n\nconst ExternalLink = createComponent('externalLink');\n\nconst H1 = createComponent('h1');\n\nconst H2 = createComponent('h2');\n\nconst H3 = createComponent('h3');\n\nexport { useEntries, createComponent };\n\nexport { Category, Group, Topic, Page, ExternalLink, H1, H2, H3 };\n\nexport default IonaProvider;\n","import React, { useEffect, useState, useContext, useRef } from 'react';\nimport { Switch, Route, Redirect, Link, useLocation } from 'react-router-dom';\nimport { MDXProvider } from '@mdx-js/react';\nimport { useEntries } from '../provider';\n\nconst BaseUrlContext = React.createContext(null);\n\nconst useBaseUrl = () => useContext(BaseUrlContext);\n\nconst IonaApp = ({ name, version, baseUrl=\"/\" }) => {\n\n  const {pathname, key: locationKey} = useLocation();\n\n  const [keyword, setSearchKeyword] = useState('');\n\n  const keywordMatch = /^\\/(.*)$/.exec(keyword);\n  const keywordRegexStr = keywordMatch && keywordMatch[1];\n  const keywordRegex = new RegExp(keywordRegexStr || `.*${keyword}.*`, 'i');\n\n  const [entries] = useEntries();\n\n  const categories = entries.filter(({ type }) => type === 'category');\n\n  const urlCategoryId = categories.map((a) => a.id).find((id) => pathname.startsWith(baseUrl + id + '/'));\n  const defaultCategoryId = categories[0] && categories[0].id;\n\n  const [categoryId, setCategoryId] = useState(urlCategoryId);\n\n  useEffect(() => {\n    setCategoryId(urlCategoryId || defaultCategoryId);\n  }, [urlCategoryId, defaultCategoryId]);\n\n  const entries1 = entries.filter(({ type, title, keywords=[] }) => {\n    if (type === 'page' || type === 'externalLink') {\n      return keywordRegex.test(title + '/' + keywords.join('/'));\n    }\n    return true;\n  });\n\n  const groups = entries1.filter(({ category={} }) => category.id === categoryId);\n  const topics = entries1.filter(({ category={}, group }) => category.id === categoryId && !group);\n  const pages = entries1.filter(({ category={}, group, topic }) => category.id === categoryId && !group && !topic);\n\n  const contentView = useRef(null);\n  const scrollTops = useRef({});\n\n  useEffect(() => {\n    if (scrollTops.current[locationKey] === undefined) {\n      contentView.current.scrollTop = 0;\n    } else {\n      contentView.current.scrollTop = scrollTops.current[locationKey];\n    }\n  }, [locationKey]);\n\n  return (\n    <BaseUrlContext.Provider value={baseUrl}>\n      <div className=\"iona-container\">\n        <div className=\"iona-menu\">\n          <div className=\"iona-header\">\n            <div className=\"iona-header-title\">\n              <Link to={baseUrl}>{name}{version && (<span className=\"iona-header-title-version\">{version}</span>)}</Link>\n            </div>\n            <div className=\"iona-category-pane\">\n              {categories.map(({ name, id }) => (\n                <div key={id} className=\"iona-category-item\" active={`${categoryId === id}`} onClick={() => setCategoryId(id)}>{name}</div>\n              ))}\n            </div>\n          </div>\n          <div className=\"iona-search-box\">\n            <input\n              type=\"text\"\n              value={keyword}\n              onChange={(e) => setSearchKeyword(e.target.value)}\n              onKeyUp={(e) => {\n                if (e.key === 'Escape') {\n                  e.target.blur();\n                }\n              }} />\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n              <path fill=\"currentColor\" d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\">\n              </path>\n            </svg>\n          </div>\n          <div className=\"iona-nav-pane\">\n            <PageList entries={pages} />\n            <TopicList entries={topics} />\n            <GroupList entries={groups} />\n          </div>\n        </div>\n        <div\n          ref={contentView}\n          className=\"iona-content\"\n          onScroll={(e) => { scrollTops.current[locationKey] = e.target.scrollTop; }}>\n          <div className=\"iona-content-wrapper\">\n            <ContentView entries={entries} />\n          </div>\n        </div>\n      </div>\n    </BaseUrlContext.Provider>\n  );\n};\n\nconst GroupList = ({ entries }) => {\n  return entries.filter(({ type }) => type === 'group').map(({ id, name }) => {\n    const topics = entries.filter(({ group={} }) => group.id === id);\n    const pages = entries.filter(({ group={}, topic }) => group.id === id && !topic);\n    return (\n      <div className=\"iona-nav-group\" key={id}>\n        <div className=\"iona-nav-title\">{name}</div>\n        <div className=\"iona-nav-list\">\n          <PageList entries={pages} />\n          <TopicList entries={topics} />\n        </div>\n      </div>\n    );\n  });\n};\n\nconst TopicList = ({ entries }) => {\n  return entries.filter(({ type }) => type === 'topic').map(({ id, name }) => {\n    const pages = entries.filter(({ topic={} }) => topic.id === id);\n    return (\n      <div className=\"iona-nav-topic\" key={id}>\n        <div className=\"iona-nav-title\">{name}</div>\n        <div className=\"iona-nav-list\">\n          <PageList entries={pages} />\n        </div>\n      </div>\n    );\n  });\n};\n\nconst PageList = ({ entries }) => {\n  const baseUrl = useBaseUrl();\n  return entries.filter(\n    ({ type }) => type === 'page' || type === 'externalLink'\n  ).sort(\n    (a, b) => a.index - b.index\n  ).map((entry) => {\n    const { id, name, type, url, loading } = entry;\n    return (\n      <div className=\"iona-nav-entry\" key={id}>\n        {type === 'page' ? (\n          <div className=\"iona-nav-page\" disabled={loading}><Link to={getPageUrl(baseUrl, entry)}>{name}</Link></div>\n        ) : (\n          <div className=\"iona-nav-link\"><a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{name}</a></div>\n        )}\n      </div>\n    );\n  });\n};\n\nconst RefLink = ({ href, to, children, ...props }) => {\n  const baseUrl = useBaseUrl();\n  if (href) {\n    return (\n      <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n        {children}\n      </a>\n    );\n  } else if (to) {\n    return (\n      <Link to={to.type === 'page' ? getPageUrl(baseUrl, to) : to} {...props}>\n        {children}\n      </Link>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst TableWrapper = ({ children }) => (\n  <div className=\"table-wrapper\">\n    <table>\n      {children}\n    </table>\n  </div>\n);\n\nconst MDXComponents = {\n  a: RefLink,\n  table: TableWrapper,\n};\n\nconst ContentView = ({ entries }) => {\n  const baseUrl = useBaseUrl();\n  const pages = entries.filter(({ type }) => type === 'page');\n  const defaultPage = pages.filter(({ default: _default }) => _default)[0];\n  return (\n    <Switch>\n      {pages.map(({ component: Component, ...page }) => {\n        const path = getPageUrl(baseUrl, page);\n        return Component && (\n          <Route key={path} exact path={path}>\n            <MDXProvider components={MDXComponents}>\n              <Component />\n            </MDXProvider>\n          </Route>\n        );\n      })}\n      <Route exact path={baseUrl}>\n        {defaultPage && defaultPage.component && (\n          <Redirect to={getPageUrl(baseUrl, defaultPage)} />\n        )}\n      </Route>\n    </Switch>\n  );\n};\n\nconst getPageUrl = (baseUrl, { category={}, group={}, topic={}, id }) => {\n  return baseUrl + [category.id, group.id, topic.id, id].filter((a) => a).join('/');\n};\n\nexport default IonaApp;\n\n","import App from './App';\n\nimport 'reset-css';\nimport 'prismjs/themes/prism-tomorrow.css';\n\nimport './index.css';\nimport './markdown.css';\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport IonaProvider from './provider';\nimport DefaultApp from './ui';\n\nconst Iona = ({ name, version, description, baseUrl, component: App=DefaultApp, children }) => {\n  return (\n    <IonaProvider>\n      {children}\n      <Router>\n        <App\n          name={name}\n          version={version}\n          description={description}\n          baseUrl={baseUrl}/>\n      </Router>\n    </IonaProvider>\n  );\n};\n\nexport default Iona;\n","import React, { useEffect, useState } from 'react';\nimport { Page } from './provider';\n\nconst PageLoader = ({ sourceId, sourcePath, promise }) => {\n  const [module, setModule] = useState(null);\n\n  const sourceFileName = /.*\\/([^/]+).mdx?/.exec(sourcePath)[1];\n\n  useEffect(() => {\n    let aborted = false;\n    promise.then((module) => {\n      if (aborted) {\n        return;\n      }\n      setModule(module);\n    });\n    return () => {\n      aborted = true;\n      setModule(null);\n    };\n  }, [promise]);\n\n  if (module) {\n    return (\n      <Page\n        name={module.frontMatter.title || sourceFileName}\n        {...module.frontMatter}\n        refId={sourceId}\n        tableOfContents={module.tableOfContents}\n        component={module['default']} />\n    );\n  } else {\n    return (\n      <Page\n        name=\"...\"\n        refId={sourceId}\n        loading={true}\n        component={null} />\n    );\n  }\n};\n\nexport default PageLoader;\n","import React from 'react';\nimport { useEntries } from './provider';\nimport { useMDXComponents } from '@mdx-js/react';\nimport { Link } from 'react-router-dom';\n\nconst RefLinkLoader = ({ sourceId, sourcePath, ...props }) => {\n  const [entries] = useEntries();\n\n  const {a: Component=Link} = useMDXComponents();\n\n  const item = entries.find(({ type, refId }) => type === 'page' && refId === sourceId);\n\n  return (\n    <Component to={item} {...props} />\n  );\n};\n\nexport default RefLinkLoader;\n","import Iona from './Iona';\nimport IonaProvider, { Category, Group, Topic, Page, ExternalLink } from './provider';\nimport PageLoader from './PageLoader';\nimport RefLinkLoader from './RefLinkLoader';\nimport IonaApp from './ui';\n\nObject.assign(Iona, {\n  Category,\n  Group,\n  Topic,\n  Page,\n  ExternalLink,\n  PageLoader,\n  RefLinkLoader,\n});\n\nexport { IonaProvider, IonaApp, Category, Group, Topic, ExternalLink };\n\nexport default Iona;\n","import React from 'react';\nimport { name, version } from '../package.json';\nimport Iona, { Group, Topic } from './lib';\nimport Page from './lib/Page.macro';\n\nconst baseUrl = process.env.PUBLIC_URL + '/'; /* eslint-disable-line no-undef */\n\nconst App = () => {\n  return (\n    <Iona name={name} version={version} baseUrl={baseUrl}>\n      <Group name=\"Manual\">\n        <Topic name=\"General\">\n          <Page src=\"./docs/Introduction.mdx\" />\n          <Page src=\"./docs/GettingStarted.mdx\" />\n          <Page src=\"./docs/WritingMDX.mdx\" />\n          <Page src=\"./docs/CreateTOC.mdx\" />\n          <Page src=\"./docs/Styling.mdx\" />\n          <Page src=\"./docs/Release.mdx\" />\n        </Topic>\n        <Topic name=\"Advanced\">\n          <Page src=\"./docs/UseAPIProxy.mdx\" />\n          <Page src=\"./docs/UseEnvVars.mdx\" />\n          <Page src=\"./docs/ProjectStructure.mdx\" />\n          <Page src=\"./docs/CustomTheme.mdx\" />\n          <Page src=\"./docs/DesktopApp.mdx\" />\n        </Topic>\n      </Group>\n      <Group name=\"Reference\">\n        <Topic name=\"Components\">\n        </Topic>\n        <Topic name=\"Miscellaneous\">\n        </Topic>\n      </Group>\n    </Iona>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}